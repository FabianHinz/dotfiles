#
# startup file read in interactive login shells (after zshrc)
#

# The following code helps us by optimizing the existing framework.
# This includes zcompile, zcompdump, etc.

# Source autocompletion for glcoud and kubectl if available
if [ -f /opt/google-cloud-sdk/completion.zsh.inc ]; then
  source "/opt/google-cloud-sdk/completion.zsh.inc"
fi

if [ -n "$(which kubectl  2>/dev/null)" ]; then
    source <(kubectl completion zsh)  # setup autocomplete in zsh
fi

(
  # Function to determine the need of a zcompile. If the .zwc file
  # does not exist, or the base file is newer, we need to compile.
  # These jobs are asynchronous, and will not impact the interactive shell
  zcompare() {
    if [[ -s ${1} && ( ! -s ${1}.zwc || ${1} -nt ${1}.zwc) ]]; then
      zcompile ${1}
    fi
  }

  zim_mods=${ZIM_HOME}/modules
  #setopt EXTENDED_GLOB

  # zcompile the completion cache; siginificant speedup.
  for file in ${ZDOTDIR:-${HOME}}/.zcomp^(*.zwc)(.); do
    zcompare ${file}
  done

  # zcompile .zshrc
  zcompare ${ZDOTDIR:-${HOME}}/.zshrc

  # zcompile some light module init scripts
  zcompare ${zim_mods}/git/init.zsh
  zcompare ${zim_mods}/utility/init.zsh
  zcompare ${zim_mods}/pacman/init.zsh
  zcompare ${zim_mods}/spectrum/init.zsh
  zcompare ${zim_mods}/completion/init.zsh
  zcompare ${zim_mods}/fasd/init.zsh

  # zcompile all .zsh files in the custom module
  for file in ${zim_mods}/custom/**/^(README.md|*.zwc)(.); do
    zcompare ${file}
  done

  # zcompile all autoloaded functions
  for file in ${zim_mods}/**/functions/^(*.zwc)(.); do
    zcompare ${file}
  done

  # syntax-highlighting
  for file in ${zim_mods}/syntax-highlighting/external/highlighters/**/*.zsh; do
    zcompare ${file}
  done
  zcompare ${zim_mods}/syntax-highlighting/external/zsh-syntax-highlighting.zsh

  # zsh-histery-substring-search
  zcompare ${zim_mods}/history-substring-search/external/zsh-history-substring-search.zsh

  zcompare ${HOME}/.fzf.zsh

) &!

# Is the Internet on fire?
# ========================
if [[ -t 0 || -t 1 ]]; then
  print '\nIs the Internet on fire?\n========================\n\n'
  dig +short txt istheinternetonfire.com | sed -e 's/\\; /\n/' -e 's/"//'g
  print
fi
