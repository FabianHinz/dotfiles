#
# User configuration sourced by interactive shells
#

# Define Zim location
ZIM_HOME=${ZDOTDIR:-${HOME}}/.zim

# Start Zim
[[ -s ${ZIM_HOME}/zimfw.zsh ]] && source ${ZIM_HOME}/zimfw.zsh

# Source fzf
# ==========
if type fzf > /dev/null; then
  [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
  [ -f /usr/share/fzf/key-bindings.zsh ] && source /usr/share/fzf/key-bindings.zsh
  [ -f /usr/share/fzf/completion.zsh ] && source /usr/share/fzf/completion.zsh
  export FZF_DEFAULT_COMMAND='ag -g ""'
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  __gen_fzf_default_opts() {

    local color00='#282a36'
    local color01='#3a3c4e'
    local color02='#626483'
    local color03='#4d4f68'
    local color04='#62d6e8'
    local color05='#e9e9f4'
    local color06='#f1f2f8'
    local color07='#f7f7fb'
    local color08='#ea51b2'
    local color09='#b45bcf'
    local color0A='#ebff87'
    local color0B='#00f769'
    local color0C='#a1efe4'
    local color0D='#62d6e8'
    local color0E='#b45bcf'
    local color0F='#00f769'

    export FZF_DEFAULT_OPTS="
      --color=bg+:$color01,bg:$color00,spinner:$color0C,hl:$color0D
      --color=fg:$color04,header:$color0D,info:$color0A,pointer:$color0C
      --color=marker:$color0C,fg+:$color06,prompt:$color0A,hl+:$color0D
    "
  }
  __gen_fzf_default_opts
fi

# gcloud sdk path and autocompletion
# ==================================
[ -f /opt/google-cloud-sdk/path.zsh.inc ] && source /opt/google-cloud-sdk/path.zsh.inc
[ -f /opt/google-cloud-sdk/completion.zsh.inc ] && source /opt/google-cloud-sdk/completion.zsh.inc
[ -f /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc ] && source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc
[ -f /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc ] && source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc

# direnv hook
# ===========
if which direnv >/dev/null 2>&1; then
  eval "$(direnv hook zsh)"
fi

setopt ignoreeof # ignore ctrl+d

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="yyyy-mm-dd"

# cdpath
# ======

# Set the the list of directories that cd searches.
cdpath+=(~)
cdpath+=(~/projects)

# weather forecast
# ================
weather() {
  curl -4 -k https://wttr.in/$1
}

# You can place all your kube configs in your local home under
# $HOME/.kube/configs. This functions collects all these config copies them
# into a temporary folder and makes them accessible via a KUBECONFIG.
# This enables you:
#   - have a common view across all contexts
#   - switch context scoped by the current tmux session
export_kubeconfigs () {
  KUBECONF_DIR=""
  # unset current context on new sessions; otherwise simply the first context will be used
  UNSET_CTX=1
  if [ -n "$TMUX_PANE" ]; then
    session_name=$(tmux list-panes -t "$TMUX_PANE" -F '#S' | head -n1)
    export KUBECONF_DIR="/tmp/kubeconfig-tmux-${session_name}"
    [ -d $KUBECONF_DIR ] && UNSET_CTX=0
    mkdir -p $KUBECONF_DIR 
  else
    export KUBECONF_DIR="$(mktemp -d /tmp/kubeconfig-shell-XXXXXXXX)"
  fi
  cp -n $HOME/.kube/config $KUBECONF_DIR/
  export KUBECONFIG="$(ls -1 $KUBECONF_DIR/* | tr '\n' ':')"
  if [ $UNSET_CTX -eq 1 ]; then
    which kubectl 2>&1 >/dev/null && kubectl config current-context >/dev/null 2>&1 && kubectl config unset current-context >/dev/null
  fi
}

which kubectl 2>&1 >/dev/null && export_kubeconfigs

# Useful enter-key
# ================
__magic-enter () {
  if [[ -z $BUFFER ]]; then
    echo ""
    if git rev-parse --is-inside-work-tree &>/dev/null; then
      git status
    fi
    zle redisplay
  else
    zle accept-line
  fi
}
zle -N __magic-enter
bindkey "^M" __magic-enter

# send notification when program terminates
function notify() {
  $*; notify-send --urgency=critical "Task completed." "Executed '$*'.\nreturn code: $?"
}

# Aliases
# =======
# Neovim
alias view='nvim -R'
alias nvsu='sudo -E nvim'
# Files
alias grep='nocorrect grep --color=always -d skip'
alias cp='nocorrect cp -i' # confirm before overwriting something
alias df='df -h' # human-readable sizes
alias du='du -h'
alias free='free -m' # show sizes in MB
alias ls='ls -FXh --group-directories-first --color=always --time-style=+"%Y-%m-%d %H:%M"'

# Zathura
alias zathura='zathura --fork > /dev/null 2>&1'
alias z='zathura'

alias lsblk='lsblk -o SIZE,NAME,VENDOR,MODEL,LABEL,FSTYPE,RO,TYPE,MOUNTPOINT,UUID'

# Kubernetes
alias k='kubectl "--context=${KUBECTL_CONTEXT:-$(kubectl config current-context)}" ${KUBECTL_NAMESPACE/[[:alnum:]-]*/--namespace=${KUBECTL_NAMESPACE}}'


# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh
